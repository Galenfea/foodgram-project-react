version: '3.3'
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - db_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - 5432:5432

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
    command: >
      bash -c "python manage.py migrate && python manage.py collectstatic 
      &&  gunicorn foodgram.wsgi:application --bind 0:8000"

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  
  nginx:
    image: nginx:1.23.3
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
    depends_on:
      - backend
      - frontend

volumes:
  static_volume:
  media_volume:
  db_volume:
